function [result] = ROI( background, objectimage )
    DIF = imabsdiff(objectimage, background);
    DIF =  max(DIF,[],3);
    Edges = im2bw(DIF, 0.15);
    result = imfill(Edges, 'holes');
end

function [ histogram ] = HOG( I, Mask )

    if size(I, 3) == 3
        I = rgb2gray(I);
    end
    [Gmag,Gdir] = imgradient(I);
    Gdir = mod(Gdir + 180, 180);
    Gdir = Gdir * (8/double(180.0));
    Gdir = floor(Gdir);
    Gmag = uint8(Gmag) .* Mask;
    histogram = zeros(1,8);
    [m,n] = size(Gdir);
    for i = 1 : m
        for j = 1 : n
            histogram(Gdir(i, j)+1) = histogram(Gdir(i, j)+1) + double(Gmag(i, j)); 
        end
    end
    histogram = histogram/sum(sum(histogram));
end


function [ Labels, HOGs ] = HOGS( )
    [Filenames,Pathname] = uigetfile('*.jpg', 'multiselect','on');
    [m,n] = size(Filenames);
    I = cell(1, n);
    Labels = cell(n, 1);
    for i = 1:n
        CurrentFile = fullfile(Pathname, cellstr(Filenames(i)));
        S = char(Filenames(i));
        Labels{i} = S(1:end-6);
        a = imread(char(CurrentFile));
        I{i}  = a;
    end
    [Filename,Pathname] = uigetfile('*.jpg', 'fondo');
    fondo = imread(fullfile(Pathname, Filename));
    ROIs = cell(n, 1);
    HOGs = zeros(n, 8, 'double');
    for i = 1:n
        ROIs{i} = ROI(I{i}, fondo);
        HOGs(i,:) = HOG(rgb2gray(I{i}), uint8(ROIs{i}));
    end
end

function [  ] = SaveHogAndLabels( Labels, Labels_filename, HOG, HOG_filename )
    strings = char(Labels);
    dlmwrite(Labels_filename, strings, 'delimiter', '');
    dlmwrite(HOG_filename, HOG);
end


function [ Labels, HOG ] = LoadHogAndLabels( HOG_File, Labels_File )

    HOG = importdata(HOG_File);
    Labels = importdata(Labels_File);

end
